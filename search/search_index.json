{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Getting Started \u00b6 bash-my-aws is a set of powerful yet simple command line tools for managing Amazon Web Services. They wrap AWSCLI and provide a number of advantages that include: short, memorable commands bash completion (including AWS resources) text output (instead of JSON) the ability to pipe output between commands Prerequisites \u00b6 awscli bash jq-1.4 or later (for stack-diff) Installation \u00b6 As shown below, you may simply clone the GitHub repo and source the files required. (You should probably fork it instead to keep your customisations) $ git clone https://github.com/bash-my-universe/bash-my-aws.git ~/.bash-my-aws Put the following in your shell's startup file: export PATH = \" $PATH : $HOME /.bash-my-aws/bin\" source ~/.bash-my-aws/aliases # For ZSH users, uncomment the following two lines: # autoload -U +X compinit && compinit # autoload -U +X bashcompinit && bashcompinit source ~/.bash-my-aws/bash_completion.sh Why use shell aliases? bash-my-aws began as a collection of bash functions, sourced into your shell. More recently, the default suggestion has been to load aliases that execute a small wrapper script that loads the functions and executes the desired function. After years of zsh users asking for support, one stepped up and identified a changes that would eliminate any shell compatibility problems without compromising the functionaility, simplicity and discoverability of the project. Massive thanks to @ninth-dev for this. Bash users can still source the functions instead of loading the aliases: # bash users may source the functions instead of loading the aliases if [ -d ${HOME}/.bash-my-aws ]; then for f in ~/.bash-my-aws/lib/*-functions; do source $f; done fi Quickstart \u00b6 Authenticate the same way you would to use AWSCLI commands. $ stacks blah blah blah $ instances Usage \u00b6 Running the commands \u00b6 The default way to run the commands is using the aliases: $ instances It's also possible to run them using the bma wrapper. (This is sometimes required when using a restrictive auth tool.) $ bma instances Discovering the functions \u00b6 For each resource type, there is a command to list them: $ instances foo DDDDDDDDDDDDDDDD bar EEEEEEEEEEEEEEEE and a number of command to act on these resources: $ instance-[TAB][TAB] instance-asg instance-ssh-details instance-termination-protection instance-az instance-stack instance-termination-protection-disable instance-console instance-start instance-termination-protection-enable instance-dns instance-state instance-type instance-iam-profile instance-stop instance-userdata instance-ip instance-tags instance-volumes instance-ssh instance-terminate instance-vpc Whether you're new to the tools or just have a bad memory, bash completion makes discovering these commands simple. See the Functions page for a full list with usage examples Piping between functions \u00b6 This is where the magic happens! The first token on each line is almost always a resource identifier. When you pipe output between the commands they just take the first token from each line. $ instances | grep splunk | instance-stack | stack-status splunk-forwarder UPDATE_COMPLETE splunk-forwarder-role CREATE_COMPLETE Inspecting the functions \u00b6 For those interested in how it works: Each command is a bash function. Most are very simple and wrap an AWSCLI command. For a quick look at how a command works, you can use bma type : $ bma type instances instances is a function instances () { local instance_ids = $( __bma_read_inputs ) ; local filters = $( __bma_read_filters $@ ) ; aws ec2 describe-instances $( [[ -n ${ instance_ids } ]] && echo --instance-ids ${ instance_ids } ) --query \" Reservations[].Instances[][ InstanceId, ImageId, InstanceType, State.Name, [Tags[?Key=='Name'].Value][0][0], LaunchTime, Placement.AvailabilityZone, VpcId ]\" --output text | grep -E -- \" $filters \" | LC_ALL = C sort -b -k 6 | column -s ' ' -t } A prettier version can be found in the source code: # ~/.bash-my-aws/lib/instance-functions instances () { local instance_ids = $( __bma_read_inputs ) local filters = $( __bma_read_filters $@ ) aws ec2 describe-instances \\ $( [[ -n ${ instance_ids } ]] && echo --instance-ids ${ instance_ids } ) \\ --query \" Reservations[].Instances[][ InstanceId, ImageId, InstanceType, State.Name, [Tags[?Key=='Name'].Value][0][0], LaunchTime, Placement.AvailabilityZone, VpcId ]\" \\ --output text | grep -E -- \" $filters \" | LC_ALL = C sort -b -k 6 | column -s $'\\t' -t } For more info on AWSCLI query syntax, check out http://jmespath.org/tutorial.html","title":"Home"},{"location":"#getting-started","text":"bash-my-aws is a set of powerful yet simple command line tools for managing Amazon Web Services. They wrap AWSCLI and provide a number of advantages that include: short, memorable commands bash completion (including AWS resources) text output (instead of JSON) the ability to pipe output between commands","title":"Getting Started"},{"location":"#prerequisites","text":"awscli bash jq-1.4 or later (for stack-diff)","title":"Prerequisites"},{"location":"#installation","text":"As shown below, you may simply clone the GitHub repo and source the files required. (You should probably fork it instead to keep your customisations) $ git clone https://github.com/bash-my-universe/bash-my-aws.git ~/.bash-my-aws Put the following in your shell's startup file: export PATH = \" $PATH : $HOME /.bash-my-aws/bin\" source ~/.bash-my-aws/aliases # For ZSH users, uncomment the following two lines: # autoload -U +X compinit && compinit # autoload -U +X bashcompinit && bashcompinit source ~/.bash-my-aws/bash_completion.sh Why use shell aliases? bash-my-aws began as a collection of bash functions, sourced into your shell. More recently, the default suggestion has been to load aliases that execute a small wrapper script that loads the functions and executes the desired function. After years of zsh users asking for support, one stepped up and identified a changes that would eliminate any shell compatibility problems without compromising the functionaility, simplicity and discoverability of the project. Massive thanks to @ninth-dev for this. Bash users can still source the functions instead of loading the aliases: # bash users may source the functions instead of loading the aliases if [ -d ${HOME}/.bash-my-aws ]; then for f in ~/.bash-my-aws/lib/*-functions; do source $f; done fi","title":"Installation"},{"location":"#quickstart","text":"Authenticate the same way you would to use AWSCLI commands. $ stacks blah blah blah $ instances","title":"Quickstart"},{"location":"#usage","text":"","title":"Usage"},{"location":"#running-the-commands","text":"The default way to run the commands is using the aliases: $ instances It's also possible to run them using the bma wrapper. (This is sometimes required when using a restrictive auth tool.) $ bma instances","title":"Running the commands"},{"location":"#discovering-the-functions","text":"For each resource type, there is a command to list them: $ instances foo DDDDDDDDDDDDDDDD bar EEEEEEEEEEEEEEEE and a number of command to act on these resources: $ instance-[TAB][TAB] instance-asg instance-ssh-details instance-termination-protection instance-az instance-stack instance-termination-protection-disable instance-console instance-start instance-termination-protection-enable instance-dns instance-state instance-type instance-iam-profile instance-stop instance-userdata instance-ip instance-tags instance-volumes instance-ssh instance-terminate instance-vpc Whether you're new to the tools or just have a bad memory, bash completion makes discovering these commands simple. See the Functions page for a full list with usage examples","title":"Discovering the functions"},{"location":"#piping-between-functions","text":"This is where the magic happens! The first token on each line is almost always a resource identifier. When you pipe output between the commands they just take the first token from each line. $ instances | grep splunk | instance-stack | stack-status splunk-forwarder UPDATE_COMPLETE splunk-forwarder-role CREATE_COMPLETE","title":"Piping between functions"},{"location":"#inspecting-the-functions","text":"For those interested in how it works: Each command is a bash function. Most are very simple and wrap an AWSCLI command. For a quick look at how a command works, you can use bma type : $ bma type instances instances is a function instances () { local instance_ids = $( __bma_read_inputs ) ; local filters = $( __bma_read_filters $@ ) ; aws ec2 describe-instances $( [[ -n ${ instance_ids } ]] && echo --instance-ids ${ instance_ids } ) --query \" Reservations[].Instances[][ InstanceId, ImageId, InstanceType, State.Name, [Tags[?Key=='Name'].Value][0][0], LaunchTime, Placement.AvailabilityZone, VpcId ]\" --output text | grep -E -- \" $filters \" | LC_ALL = C sort -b -k 6 | column -s ' ' -t } A prettier version can be found in the source code: # ~/.bash-my-aws/lib/instance-functions instances () { local instance_ids = $( __bma_read_inputs ) local filters = $( __bma_read_filters $@ ) aws ec2 describe-instances \\ $( [[ -n ${ instance_ids } ]] && echo --instance-ids ${ instance_ids } ) \\ --query \" Reservations[].Instances[][ InstanceId, ImageId, InstanceType, State.Name, [Tags[?Key=='Name'].Value][0][0], LaunchTime, Placement.AvailabilityZone, VpcId ]\" \\ --output text | grep -E -- \" $filters \" | LC_ALL = C sort -b -k 6 | column -s $'\\t' -t } For more info on AWSCLI query syntax, check out http://jmespath.org/tutorial.html","title":"Inspecting the functions"},{"location":"commands/","text":"asg-functions \u00b6 asg-capacity \u00b6 asg-desired-size-set \u00b6 asg-instances \u00b6 asg-launch-configuration \u00b6 asg-max-size-set \u00b6 asg-min-size-set \u00b6 asg-processes_suspended \u00b6 asg-resume \u00b6 asg-scaling-activities \u00b6 asg-stack \u00b6 asg-suspend \u00b6 asgs \u00b6 aws-account-functions \u00b6 These functions target AWS Accounts and act on either the account you're authenticated to or the Account IDs provided to them. aws-account-alias \u00b6 Retrieve AWS Account Alias for current account $ aws-account-alias example-account-prod aws-account-cost-explorer \u00b6 aws-account-cost-recommendations \u00b6 aws-account-each \u00b6 Run a script/command across a number of AWS Accounts $ grep non_prod AWS_ACCOUNTS | aws-account-each stacks FAILED # account=012345678901 alias=example-account-prod example-stack1-prod CREATED_FAILED example-stack2-prod UPDATE_ROLLBACK_FAILED # account=123456789012 alias=example-account-staging example-stack1-staging CREATED_FAILED example-stack2-staging UPDATE_ROLLBACK_FAILED aws-account-id \u00b6 Retrieve AWS Account ID for current account $ aws-account-id 012345678901 bucket-functions \u00b6 buckets \u00b6 bucket-acls \u00b6 bucket-remove \u00b6 bucket-remove-force \u00b6 cert-functions \u00b6 ACM Certificates certs \u00b6 cert-delete \u00b6 cert-users \u00b6 certs-arn \u00b6 cloudtrail-status \u00b6 cloudtrails \u00b6 columnise \u00b6 ecr-functions \u00b6 ecr-repositories \u00b6 ecr-repository-images \u00b6 elb-functions \u00b6 elb-dnsname \u00b6 elb-instances \u00b6 elb-stack \u00b6 elbs \u00b6 iam-functions \u00b6 iam-role-principal \u00b6 iam-roles \u00b6 image-deregister \u00b6 images \u00b6 instance-functions \u00b6 instance-asg \u00b6 instance-az \u00b6 instance-console \u00b6 instance-dns \u00b6 instance-iam-profile \u00b6 instance-ip \u00b6 instance-ssh \u00b6 instance-ssh-details \u00b6 instance-stack \u00b6 instance-start \u00b6 instance-state \u00b6 instance-stop \u00b6 instance-tags \u00b6 instance-terminate \u00b6 instance-termination-protection \u00b6 instance-termination-protection-disable \u00b6 instance-termination-protection-enable \u00b6 instance-type \u00b6 instance-userdata \u00b6 instance-volumes \u00b6 instance-vpc \u00b6 instances \u00b6 keypair-functions \u00b6 List, create and delete EC2 SSH Keypairs keypairs \u00b6 keypair-create \u00b6 keypair-delete \u00b6 lambda-functions \u00b6 lambda-functions \u00b6 lambda-function-memory \u00b6 lambda-function-memory-set \u00b6 lambda-function-memory-step \u00b6 launch-configuration-asgs \u00b6 launch-configurations \u00b6 log-groups \u00b6 pcxs \u00b6 rds-db-instances \u00b6 region-functions \u00b6 regions \u00b6 List regions region \u00b6 Set $AWS_DEFAULT_REGION shell environment variable region-each \u00b6 Run a command in every region. Any output lines will be appended with \"#${REGION}\". stack-functions \u00b6 Acts on CloudFormation stacks. This was where bash-my-aws started back in 2014. A few of these functions do not yet accept multiple stacks as piped input. stacks \u00b6 stack-arn \u00b6 stack-asg-instances \u00b6 stack-asgs \u00b6 stack-cancel-update \u00b6 stack-create \u00b6 stack-delete \u00b6 stack-diff \u00b6 stack-elbs \u00b6 stack-events \u00b6 stack-exports \u00b6 stack-failure \u00b6 stack-instances \u00b6 stack-outputs \u00b6 stack-parameters \u00b6 stack-recreate \u00b6 stack-resources \u00b6 stack-status \u00b6 stack-tag \u00b6 stack-tag-apply \u00b6 stack-tag-delete \u00b6 stack-tags \u00b6 stack-tags-text \u00b6 stack-tail \u00b6 stack-template \u00b6 stack-update \u00b6 stack-validate \u00b6 sts-assume-role \u00b6 subnets \u00b6 vpc-functions \u00b6 vpc-az-count \u00b6 vpc-azs \u00b6 vpc-default-delete \u00b6 vpc-dhcp-options-ntp \u00b6 vpc-endpoints \u00b6 vpc-igw \u00b6 vpc-lambda-functions \u00b6 vpc-nat-gateways \u00b6 vpc-network-acls \u00b6 vpc-rds \u00b6 vpc-route-tables \u00b6 vpc-subnets \u00b6 vpcs \u00b6 Internal functions \u00b6 __bma_error __bma_read_filters __bma_read_inputs __bma_read_stdin __bma_usage _bma_derive_params_from_stack_and_template _bma_derive_params_from_template _bma_derive_stack_from_params _bma_derive_stack_from_template _bma_derive_template_from_params _bma_derive_template_from_stack _bma_stack_args _bma_stack_capabilities _bma_stack_diff_params _bma_stack_diff_template _bma_stack_name_arg _bma_stack_params_arg _bma_stack_template_arg","title":"Commands"},{"location":"commands/#asg-functions","text":"","title":"asg-functions"},{"location":"commands/#asg-capacity","text":"","title":"asg-capacity"},{"location":"commands/#asg-desired-size-set","text":"","title":"asg-desired-size-set"},{"location":"commands/#asg-instances","text":"","title":"asg-instances"},{"location":"commands/#asg-launch-configuration","text":"","title":"asg-launch-configuration"},{"location":"commands/#asg-max-size-set","text":"","title":"asg-max-size-set"},{"location":"commands/#asg-min-size-set","text":"","title":"asg-min-size-set"},{"location":"commands/#asg-processes_suspended","text":"","title":"asg-processes_suspended"},{"location":"commands/#asg-resume","text":"","title":"asg-resume"},{"location":"commands/#asg-scaling-activities","text":"","title":"asg-scaling-activities"},{"location":"commands/#asg-stack","text":"","title":"asg-stack"},{"location":"commands/#asg-suspend","text":"","title":"asg-suspend"},{"location":"commands/#asgs","text":"","title":"asgs"},{"location":"commands/#aws-account-functions","text":"These functions target AWS Accounts and act on either the account you're authenticated to or the Account IDs provided to them.","title":"aws-account-functions"},{"location":"commands/#aws-account-alias","text":"Retrieve AWS Account Alias for current account $ aws-account-alias example-account-prod","title":"aws-account-alias"},{"location":"commands/#aws-account-cost-explorer","text":"","title":"aws-account-cost-explorer"},{"location":"commands/#aws-account-cost-recommendations","text":"","title":"aws-account-cost-recommendations"},{"location":"commands/#aws-account-each","text":"Run a script/command across a number of AWS Accounts $ grep non_prod AWS_ACCOUNTS | aws-account-each stacks FAILED # account=012345678901 alias=example-account-prod example-stack1-prod CREATED_FAILED example-stack2-prod UPDATE_ROLLBACK_FAILED # account=123456789012 alias=example-account-staging example-stack1-staging CREATED_FAILED example-stack2-staging UPDATE_ROLLBACK_FAILED","title":"aws-account-each"},{"location":"commands/#aws-account-id","text":"Retrieve AWS Account ID for current account $ aws-account-id 012345678901","title":"aws-account-id"},{"location":"commands/#bucket-functions","text":"","title":"bucket-functions"},{"location":"commands/#buckets","text":"","title":"buckets"},{"location":"commands/#bucket-acls","text":"","title":"bucket-acls"},{"location":"commands/#bucket-remove","text":"","title":"bucket-remove"},{"location":"commands/#bucket-remove-force","text":"","title":"bucket-remove-force"},{"location":"commands/#cert-functions","text":"ACM Certificates","title":"cert-functions"},{"location":"commands/#certs","text":"","title":"certs"},{"location":"commands/#cert-delete","text":"","title":"cert-delete"},{"location":"commands/#cert-users","text":"","title":"cert-users"},{"location":"commands/#certs-arn","text":"","title":"certs-arn"},{"location":"commands/#cloudtrail-status","text":"","title":"cloudtrail-status"},{"location":"commands/#cloudtrails","text":"","title":"cloudtrails"},{"location":"commands/#columnise","text":"","title":"columnise"},{"location":"commands/#ecr-functions","text":"","title":"ecr-functions"},{"location":"commands/#ecr-repositories","text":"","title":"ecr-repositories"},{"location":"commands/#ecr-repository-images","text":"","title":"ecr-repository-images"},{"location":"commands/#elb-functions","text":"","title":"elb-functions"},{"location":"commands/#elb-dnsname","text":"","title":"elb-dnsname"},{"location":"commands/#elb-instances","text":"","title":"elb-instances"},{"location":"commands/#elb-stack","text":"","title":"elb-stack"},{"location":"commands/#elbs","text":"","title":"elbs"},{"location":"commands/#iam-functions","text":"","title":"iam-functions"},{"location":"commands/#iam-role-principal","text":"","title":"iam-role-principal"},{"location":"commands/#iam-roles","text":"","title":"iam-roles"},{"location":"commands/#image-deregister","text":"","title":"image-deregister"},{"location":"commands/#images","text":"","title":"images"},{"location":"commands/#instance-functions","text":"","title":"instance-functions"},{"location":"commands/#instance-asg","text":"","title":"instance-asg"},{"location":"commands/#instance-az","text":"","title":"instance-az"},{"location":"commands/#instance-console","text":"","title":"instance-console"},{"location":"commands/#instance-dns","text":"","title":"instance-dns"},{"location":"commands/#instance-iam-profile","text":"","title":"instance-iam-profile"},{"location":"commands/#instance-ip","text":"","title":"instance-ip"},{"location":"commands/#instance-ssh","text":"","title":"instance-ssh"},{"location":"commands/#instance-ssh-details","text":"","title":"instance-ssh-details"},{"location":"commands/#instance-stack","text":"","title":"instance-stack"},{"location":"commands/#instance-start","text":"","title":"instance-start"},{"location":"commands/#instance-state","text":"","title":"instance-state"},{"location":"commands/#instance-stop","text":"","title":"instance-stop"},{"location":"commands/#instance-tags","text":"","title":"instance-tags"},{"location":"commands/#instance-terminate","text":"","title":"instance-terminate"},{"location":"commands/#instance-termination-protection","text":"","title":"instance-termination-protection"},{"location":"commands/#instance-termination-protection-disable","text":"","title":"instance-termination-protection-disable"},{"location":"commands/#instance-termination-protection-enable","text":"","title":"instance-termination-protection-enable"},{"location":"commands/#instance-type","text":"","title":"instance-type"},{"location":"commands/#instance-userdata","text":"","title":"instance-userdata"},{"location":"commands/#instance-volumes","text":"","title":"instance-volumes"},{"location":"commands/#instance-vpc","text":"","title":"instance-vpc"},{"location":"commands/#instances","text":"","title":"instances"},{"location":"commands/#keypair-functions","text":"List, create and delete EC2 SSH Keypairs","title":"keypair-functions"},{"location":"commands/#keypairs","text":"","title":"keypairs"},{"location":"commands/#keypair-create","text":"","title":"keypair-create"},{"location":"commands/#keypair-delete","text":"","title":"keypair-delete"},{"location":"commands/#lambda-functions","text":"","title":"lambda-functions"},{"location":"commands/#lambda-functions_1","text":"","title":"lambda-functions"},{"location":"commands/#lambda-function-memory","text":"","title":"lambda-function-memory"},{"location":"commands/#lambda-function-memory-set","text":"","title":"lambda-function-memory-set"},{"location":"commands/#lambda-function-memory-step","text":"","title":"lambda-function-memory-step"},{"location":"commands/#launch-configuration-asgs","text":"","title":"launch-configuration-asgs"},{"location":"commands/#launch-configurations","text":"","title":"launch-configurations"},{"location":"commands/#log-groups","text":"","title":"log-groups"},{"location":"commands/#pcxs","text":"","title":"pcxs"},{"location":"commands/#rds-db-instances","text":"","title":"rds-db-instances"},{"location":"commands/#region-functions","text":"","title":"region-functions"},{"location":"commands/#regions","text":"List regions","title":"regions"},{"location":"commands/#region","text":"Set $AWS_DEFAULT_REGION shell environment variable","title":"region"},{"location":"commands/#region-each","text":"Run a command in every region. Any output lines will be appended with \"#${REGION}\".","title":"region-each"},{"location":"commands/#stack-functions","text":"Acts on CloudFormation stacks. This was where bash-my-aws started back in 2014. A few of these functions do not yet accept multiple stacks as piped input.","title":"stack-functions"},{"location":"commands/#stacks","text":"","title":"stacks"},{"location":"commands/#stack-arn","text":"","title":"stack-arn"},{"location":"commands/#stack-asg-instances","text":"","title":"stack-asg-instances"},{"location":"commands/#stack-asgs","text":"","title":"stack-asgs"},{"location":"commands/#stack-cancel-update","text":"","title":"stack-cancel-update"},{"location":"commands/#stack-create","text":"","title":"stack-create"},{"location":"commands/#stack-delete","text":"","title":"stack-delete"},{"location":"commands/#stack-diff","text":"","title":"stack-diff"},{"location":"commands/#stack-elbs","text":"","title":"stack-elbs"},{"location":"commands/#stack-events","text":"","title":"stack-events"},{"location":"commands/#stack-exports","text":"","title":"stack-exports"},{"location":"commands/#stack-failure","text":"","title":"stack-failure"},{"location":"commands/#stack-instances","text":"","title":"stack-instances"},{"location":"commands/#stack-outputs","text":"","title":"stack-outputs"},{"location":"commands/#stack-parameters","text":"","title":"stack-parameters"},{"location":"commands/#stack-recreate","text":"","title":"stack-recreate"},{"location":"commands/#stack-resources","text":"","title":"stack-resources"},{"location":"commands/#stack-status","text":"","title":"stack-status"},{"location":"commands/#stack-tag","text":"","title":"stack-tag"},{"location":"commands/#stack-tag-apply","text":"","title":"stack-tag-apply"},{"location":"commands/#stack-tag-delete","text":"","title":"stack-tag-delete"},{"location":"commands/#stack-tags","text":"","title":"stack-tags"},{"location":"commands/#stack-tags-text","text":"","title":"stack-tags-text"},{"location":"commands/#stack-tail","text":"","title":"stack-tail"},{"location":"commands/#stack-template","text":"","title":"stack-template"},{"location":"commands/#stack-update","text":"","title":"stack-update"},{"location":"commands/#stack-validate","text":"","title":"stack-validate"},{"location":"commands/#sts-assume-role","text":"","title":"sts-assume-role"},{"location":"commands/#subnets","text":"","title":"subnets"},{"location":"commands/#vpc-functions","text":"","title":"vpc-functions"},{"location":"commands/#vpc-az-count","text":"","title":"vpc-az-count"},{"location":"commands/#vpc-azs","text":"","title":"vpc-azs"},{"location":"commands/#vpc-default-delete","text":"","title":"vpc-default-delete"},{"location":"commands/#vpc-dhcp-options-ntp","text":"","title":"vpc-dhcp-options-ntp"},{"location":"commands/#vpc-endpoints","text":"","title":"vpc-endpoints"},{"location":"commands/#vpc-igw","text":"","title":"vpc-igw"},{"location":"commands/#vpc-lambda-functions","text":"","title":"vpc-lambda-functions"},{"location":"commands/#vpc-nat-gateways","text":"","title":"vpc-nat-gateways"},{"location":"commands/#vpc-network-acls","text":"","title":"vpc-network-acls"},{"location":"commands/#vpc-rds","text":"","title":"vpc-rds"},{"location":"commands/#vpc-route-tables","text":"","title":"vpc-route-tables"},{"location":"commands/#vpc-subnets","text":"","title":"vpc-subnets"},{"location":"commands/#vpcs","text":"","title":"vpcs"},{"location":"commands/#internal-functions","text":"__bma_error __bma_read_filters __bma_read_inputs __bma_read_stdin __bma_usage _bma_derive_params_from_stack_and_template _bma_derive_params_from_template _bma_derive_stack_from_params _bma_derive_stack_from_template _bma_derive_template_from_params _bma_derive_template_from_stack _bma_stack_args _bma_stack_capabilities _bma_stack_diff_params _bma_stack_diff_template _bma_stack_name_arg _bma_stack_params_arg _bma_stack_template_arg","title":"Internal functions"},{"location":"tour/","text":"Tour \u00b6 Check this out!","title":"Tour"},{"location":"tour/#tour","text":"Check this out!","title":"Tour"}]}